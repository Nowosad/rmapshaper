% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/simplify.R
\name{simplify}
\alias{simplify}
\title{Topologically-aware geometry simplification.}
\usage{
simplify(sp_obj, keep = 0.05, method = NULL, keep_shapes = TRUE,
  no_repair = FALSE, snap = TRUE)
}
\arguments{
\item{sp_obj}{spatial object to simplify - can be one of the Spatial classes (e.g., SpatialPolygonsDataFrame) or class json}

\item{keep}{proportion of points to retain (0-1; default 0.05)}

\item{method}{simplification method to use: \code{"vis"} for Visvalingam
algorithm, or \code{"dp"} for Douglas-Peuker algorithm. If left as
\code{NULL} (default), uses Visvalingam simplification but modifies the
area metric by underweighting the effective area of points at the vertex of
more acute angles, resulting in a smoother appearance. See this
\url{https://github.com/mbloch/mapshaper/wiki/Simplification-Tips}{link}
for more information.}

\item{keep_shapes}{Prevent polygon features from disappearing at high
simplification (default \code{TRUE})}

\item{no_repair}{disable intersection repair after simplification (default
\code{FALSE}).}

\item{snap}{Snap together vertices within a small distance threshold to
  fix small coordinate misalignment in adjacent polygons. Default
  \code{TRUE}.}
}
\value{
a simplified representation of the geometry in the same class as the input
}
\description{
Uses \href{https://github.com/mbloch/mapshaper}{mapshaper} to simplify
polygons.
}
\examples{
# With a simple geojson object
poly <- '{
  "type": "Feature",
  "properties": {},
  "geometry": {
    "type": "Polygon",
    "coordinates": [[
      [-70.603637, -33.399918],
      [-70.614624, -33.395332],
      [-70.639343, -33.392466],
      [-70.659942, -33.394759],
      [-70.683975, -33.404504],
      [-70.697021, -33.419406],
      [-70.701141, -33.434306],
      [-70.700454, -33.446339],
      [-70.694274, -33.458369],
      [-70.682601, -33.465816],
      [-70.668869, -33.472117],
      [-70.646209, -33.473835],
      [-70.624923, -33.472117],
      [-70.609817, -33.468107],
      [-70.595397, -33.458369],
      [-70.587158, -33.442901],
      [-70.587158, -33.426283],
      [-70.590591, -33.414248],
      [-70.594711, -33.406224],
      [-70.603637, -33.399918]
    ]]
  }
}'
class(poly) <- "json"

simplify(poly)

\dontrun{
# With a SpatialPolygonsDataFrame. You will need the rworldmap package for this example:
library("rworldmap")
world <- getMap()
simplify(world)
}
}

